---

# This batch scenario will give you a minimal, non-HA Cloud 8 deployment suitable for
# performing a disruptive (normal) upgrade to Cloud 9. You can apply it to a cloud
# with Crowbar already installed (no OpenStack barclamps applied, yet).
#
# Before you apply this batch scenario, you will need to ensure the following
# aliases exist in Crowbar and point to nodes suitable as controllers and
# compute nodes, respectively:
#
#    * controller1
#    * compute1
#    * compute2 (optional)
#    * compute3 (optional)
#
# By default, this sceanorio only deploys one compute node (compute1).
# Optionally, you can add additional compute nodes. To do this, uncomment the
# compute node roles denoted as "optional, uncomment as needed" below.  Once
# you have made these alias assignments, copy this scenario file to your
# Crowbar node's /root directory and apply it using the follow command:
#
#    crowbar batch --timeout 3600 build /root/scenario-nondisruptive-minimal.yaml

proposals:

- barclamp: database
  deployment:
    elements:
      database-server:
      - @@controller1@@

- barclamp: rabbitmq
  attributes:
    client:
      enable_notifications: true
  deployment:
    elements:
      rabbitmq-server:
      - @@controller1@@

- barclamp: keystone
  deployment:
    elements:
      keystone-server:
      - @@controller1@@

- barclamp: glance
  attributes:
  deployment:
    elements:
      glance-server:
      - @@controller1@@

- barclamp: cinder
  attributes:
    volumes:
    - backend_driver: local
      backend_name: default
      local:
        volume_name: cinder-volumes
        file_name: "/var/lib/cinder/volume.raw"
        file_size: 2000
  deployment:
    elements:
      cinder-controller:
      - @@controller1@@
      cinder-volume:
      - @@controller1@@

- barclamp: neutron
  attributes:
    ml2_mechanism_drivers:
    - 'openvswitch'
    ml2_type_drivers:
    - 'vlan'
    num_vlans: 99
    ml2_type_drivers_default_provider_network: 'vlan'
    ml2_type_drivers_default_tenant_network: 'vlan'
  deployment:
    elements:
      neutron-server:
      - @@controller1@@
      neutron-network:
      - @@controller1@@

- barclamp: nova
  attributes:
    itxt_instance: ''
    use_migration: true
    kvm:
      ksm_enabled: true
    metadata:
      vendordata:
        json: '{"custom-key": "custom-value"}'
  deployment:
    elements:
      ec2-api:
      - @@controller1@@
      nova-controller:
      - @@controller1@@
      nova-compute-hyperv: []
      nova-compute-kvm:
      - @@compute1@@
      #- @@compute2@@ # optional, uncomment as needed
      #- @@compute3@@ # optional, uncomment as needed
      nova-compute-qemu: []
      nova-compute-xen: []

- barclamp: horizon
  attributes:
  deployment:
    elements:
      horizon-server:
      - @@controller1@@

- barclamp: heat
  attributes:
  deployment:
    elements:
      heat-server:
      - @@controller1@@

- barclamp: ceilometer
  attributes:
  deployment:
    elements:
      ceilometer-agent:
      - @@compute1@@
      #- @@compute2@@ # optional, uncomment as needed
      #- @@compute3@@ # optional, uncomment as needed
      ceilometer-agent-hyperv: []
      ceilometer-central:
      - @@controller1@@
      ceilometer-server:
      - @@controller1@@

- barclamp: tempest
  attributes:
  deployment:
    elements:
      tempest:
      - @@controller1@@
